
#spring.datasource.driver-class-name = com.mysql.jdbc.Driver
#spring.datasource.url = jdbc:mysql://localhost:3306/sol?useSSL=true
#spring.datasource.username = root
#spring.datasource.password =123456


security.basic.enabled=false


spring.datasource.driver-class-name = org.postgresql.Driver
spring.datasource.url = jdbc:postgresql://sbiymdvltaunnx:a8cfe732a24937cda48d29b651645a84a3efc82966051a0f1b7a29e19a9af16c@ec2-184-73-159-137.compute-1.amazonaws.com:5432/d2imdq1tlu3415
spring.datasource.username = sbiymdvltaunnx
spring.datasource.password =a8cfe732a24937cda48d29b651645a84a3efc82966051a0f1b7a29e19a9af16c


server.port=${PORT:8080}


#logging.level.org.springframework.security=DEBUG
#logging.level.br.com.tecsoluction.sol==DEBUG

# Configure Hibernate DDL mode: create / update
#spring.jpa.properties.hibernate.hbm2ddl.auto = update

# Disable the default loggers
#logging.level.org = WARN
#logging.level.blog = WARN

## Show SQL executed with parameter bindings
#logging.level.org.hibernate.SQL = DEBUG
#logging.level.org.hibernate.type.descriptor = TRACE
spring.jpa.properties.hibernate.format_sql = TRUE

spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = create
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect


# ===============================
# = Thymeleaf configurations
# ===============================
#spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users-query=select username, senha, isativo from usuario where username=?
spring.queries.roles-query=select u.username, r.name from usuario u inner join usuario_role ur on(u.id=ur.idusuario) inner join role r on(ur.idrole=r.id) where u.username=?